#!/bin/bash

# How to use:
# bash /home/kali/Projects/Black-Hat-Bash/pentest.sh

# Setting up aliases
alias playground="bash /home/kali/Projects/Black-Hat-Bash/playground/playground.sh"

# Lab-related commands
alias taillab="tail -f /var/log/lab-install.log"
alias pslab="sudo docker ps --format '{{.Names}}'"

# Exploit Tools
alias rustscan="sudo docker run --network=host -it --rm --name rustscan rustscan/rustscan:2.1.1"
alias lexsuggester="perl /home/kali/tools/linux-exploit-suggester-2-master/linux-exploit-suggester-2.pl"
alias gitjacker="/home/kali/tools/gitjacker"
alias linenum="/home/kali/tools/LinEnum.sh"

# Starting terminal session recording
FILENAME=$(date +%m_%d_%Y_%H:%M:%S).log
FOLDERNAME="/home/kali/Projects/Black-Hat-Bash/sessions"
if [[ ! -d "$FOLDERNAME" ]]; then
  mkdir "$FOLDERNAME"
fi

# Starting script session
if [[ -z "$SCRIPT" ]]; then
  export SCRIPT="$FOLDERNAME/$FILENAME"
  script -q -f "$SCRIPT"
fi

urlencode() {
  local string_to_encode="$1"
  if [[ -z "$string_to_encode" ]]; then
    echo "Missing parameter: urlencode <string_to_encode>"
    return 1
  fi
  echo "$string_to_encode" | jq -sRr @uri
}

notify_slack() {
  local text="$1"
  if curl -X POST \
    -H 'Content-type: application/json' \
    --data "{\"text\":\"$text\"}" \
    "$SLACK_WEBHOOK_URL" &> /dev/null; then
    return 0
  else
    echo "Failed to send Slack notification!"
    return 1
  fi
}