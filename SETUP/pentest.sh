#!/bin/bash

# Source this file to '.bashrc' file in your home directory:
# source "/home/kali/Projects/Black-Hat-Bash/SETUP/pentest.sh"

# Setting up aliases
alias playground="bash ~/Projects/Black-Hat-Bash/LAB-PLAYGROUND/playground.sh"

# Lab-related commands
alias taillab="tail -f /var/log/lab-install.log"
alias pslab="sudo docker ps --format '{{.Names}}'"

# Exploit Tools
alias rustscan="~/tools/rustscan"
alias gitjacker="~/tools/gitjacker"

# Exploit Scripts
alias lexsuggester="perl ~/tools/linux-exploit-suggester-2/linux-exploit-suggester-2.pl"
alias linenum="~/tools/LinEnum.sh"

# Starting terminal session recording
#FILENAME=$(date +%m_%d_%Y_%H:%M:%S).log
#FOLDERNAME="~/Projects/Black-Hat-Bash/sessions"
#if [[ ! -d "$FOLDERNAME" ]]; then
#  mkdir "$FOLDERNAME"
#fi

# Starting script session
#if [[ -z "$SCRIPT" ]]; then
#  export SCRIPT="$FOLDERNAME/$FILENAME"
#  script -q -f "$SCRIPT"
#fi

check_tools_versions(){
  whatweb --version; which whatweb
  rustscan --version; which rustscan
  nmap --version; which nmap
  nuclei --version; which nuclei
  dirsearch --version 2> /dev/null; which dirsearch
  pwncat-cs --version 2> /dev/null; which pwncat-cs
  which unix-privesc-check

  arp-scan --version; which arp-scan
  nikto -Version; which nikto
  which at
  # burpsuite

  # lexsuggester
  # linenum
}

urlencode() {
  local string_to_encode="$1"
  if [[ -z "$string_to_encode" ]]; then
    echo "Missing parameter: urlencode <string_to_encode>"
    return 1
  fi
  echo "$string_to_encode" | jq -sRr @uri
}

notify_slack() {
  local text="$1"
  if curl -X POST \
    -H 'Content-type: application/json' \
    --data "{\"text\":\"$text\"}" \
    "$SLACK_WEBHOOK_URL" &> /dev/null; then
    return 0
  else
    echo "Failed to send Slack notification!"
    return 1
  fi
}